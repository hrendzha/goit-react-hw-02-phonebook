{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","onSubmit","props","isContactNameExist","alert","resetState","contacts","find","this","className","s","contactForm","fieldWrapper","field","label","type","pattern","title","required","onChange","Component","Filter","ContactListItem","id","onClick","btnDelete","ContactList","onContactDelete","map","listItem","Container","children","container","App","filter","handleFormSubmit","userInfo","generateId","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","includes","handleContactDelete","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889cf333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"ContactForm_field__2c9Zi\",\"fieldWrapper\":\"ContactForm_fieldWrapper__iMy9i\",\"label\":\"ContactForm_label__378f8\",\"contactForm\":\"ContactForm_contactForm__OrlO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__1fRnc\",\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactListItem_btnDelete__3JKCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n    name: '',\n    number: '',\n};\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n        contacts: PropTypes.array.isRequired,\n    };\n\n    state = { ...INITIAL_STATE };\n\n    handleInputChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const { onSubmit } = this.props;\n        const { name } = this.state;\n\n        if (this.isContactNameExist()) {\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        onSubmit(this.state);\n        this.resetState();\n    };\n\n    resetState = () => this.setState({ ...INITIAL_STATE });\n\n    isContactNameExist = () =>\n        this.props.contacts.find(({ name }) => name === this.state.name);\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form className={s.contactForm} onSubmit={this.handleSubmit}>\n                <div className={s.fieldWrapper}>\n                    <label className={s.field}>\n                        <span className={s.label}>Name</span>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            value={name}\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n                    <label className={s.field}>\n                        <span className={s.label}>Number</span>\n                        <input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                            required\n                            value={number}\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n                </div>\n                <button type=\"submit\">Add contact</button>\n            </form>\n        );\n    }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n    return (\n        <label className={s.field}>\n            <span className={s.label}>Find contacts by name</span>\n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onClick }) {\n    return (\n        <>\n            <span>\n                {name}: {number}\n            </span>\n            <button\n                className={s.btnDelete}\n                type=\"button\"\n                onClick={() => onClick(id)}\n            >\n                Delete\n            </button>\n        </>\n    );\n}\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onContactDelete }) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li className={s.listItem} key={id}>\n                    <ContactListItem\n                        id={id}\n                        name={name}\n                        number={number}\n                        onClick={onContactDelete}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default ContactList;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport { v4 as generateId } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Container from './components/Container';\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    };\n\n    handleFormSubmit = userInfo =>\n        this.setState(({ contacts }) => ({\n            contacts: [\n                ...contacts,\n                {\n                    id: generateId(),\n                    ...userInfo,\n                },\n            ],\n        }));\n\n    handleFilterChange = e => this.setState({ filter: e.target.value });\n\n    getFilteredContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    handleContactDelete = contactId =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(({ id }) => id !== contactId),\n        }));\n\n    render() {\n        const { contacts, filter } = this.state;\n\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm\n                    onSubmit={this.handleFormSubmit}\n                    contacts={[...contacts]}\n                />\n\n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={this.handleFilterChange} />\n                <ContactList\n                    contacts={this.getFilteredContacts()}\n                    onContactDelete={this.handleContactDelete}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}